# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: tests

on:
  pull_request:
    branches: [master, develop]

  push:
    branches: [master, develop]

jobs:

  cythonize:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.5
      with:
        fetch-depth: 5

    - uses: actions/cache@v2.1.6
      id: cache-c
      with:
        path: asgi_tools/*.c
        key: ${{ hashFiles('asgi_tools/forms.pyx', 'asgi_tools/multipart.pxd', 'asgi_tools/multipart.pyx') }}

    - name: Cythonize the package
      run: |
        pip install cython --install-option="--no-cython-compile"
        cython asgi_tools/forms.pyx
        cython asgi_tools/multipart.pyx
      if: steps.cache-c.outputs.cache-hit != 'true'

    - uses: actions/upload-artifact@v2
      with:
        name: asgi_tools
        path: asgi_tools/*.c

  tests:
    runs-on: ubuntu-latest
    needs: cythonize
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', 'pypy-3.7']

    steps:
    - uses: actions/checkout@v2.3.5
      with:
        fetch-depth: 5

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.2.2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v2.1.6
      with:
        path: ~/.cache/pip
        key: ${{ hashFiles('setup.cfg') }}

    - uses: actions/download-artifact@v2
      if: matrix.python-version != 'pypy-3.7'
  
    - name: Compile cython files
      run: python setup.py build_ext --inplace
      if: matrix.python-version != 'pypy-3.7'

    - name: Setup requirements
      run: pip install .[tests]

    - name: Check typing
      run: mypy --install-types --non-interactive asgi_tools
      if: ${{ matrix.python-version != 'pypy-3.7' }}

    - name: Test with pytest
      run: pytest tests

  notify:
    runs-on: ubuntu-latest
    needs: tests
    steps:

    - name: Notify Success
      uses: archive/github-actions-slack@master
      with:
          slack-channel: C2CRL4C4V
          slack-text: "*[${{ github.repository }}]* tests are passed *(${{ github.ref }})* https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack-optional-as_user: false
          slack-optional-icon_emoji: ":white_check_mark:"
